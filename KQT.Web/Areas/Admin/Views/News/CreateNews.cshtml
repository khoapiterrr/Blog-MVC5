@model KQT.Entity.NewsEntity

@{
    ViewBag.Title = "CreateNews";
    Layout = "~/Areas/Admin/Views/Shared/_Layout.cshtml";
}

<div class="content-header">
    <div class="container-fluid">
        <div class="row mb-2">
            <div class="col-sm-6">
                <h1 class="m-0 text-dark">Quản lý tin tức</h1>
            </div><!-- /.col -->
            <div class="col-sm-6">
                <ol class="breadcrumb float-sm-right">
                    <li class="breadcrumb-item"><a href="#">Home</a></li>
                    <li class="breadcrumb-item">Tin tức </li>
                    <li class="breadcrumb-item active">Thêm mới </li>
                </ol>
            </div><!-- /.col -->
        </div><!-- /.row -->
    </div><!-- /.container-fluid -->
</div>
<section>
    <div class="row">
        <div class="col-12">
            <div class="card">
                @using (Html.BeginForm("CreateNews", "News", FormMethod.Post, new { encType = "multipart/form-data" }))
                {
                    <div class="card-header">
                        <div class="row">
                            <div class="col-md-6">
                                <h3 class="card-title">Thêm mới tin tức</h3>
                            </div>
                            <div class="col-md-6 text-right">
                                <a href='@Url.Action("Index", "News")' class="btn btn-danger"> Danh sách</a>
                                &nbsp;
                                @*<input id="btnThem" type="button" value="Thêm" class="btn btn-warning" />*@
                                <button type="submit" id="btnThem" class="btn btn-warning"><i class="fas fa-save"></i> Lưu</button>
                            </div>
                        </div>
                    </div>
                    <div class="card-body">
                        @Html.AntiForgeryToken()

                        <div class="form-horizontal">
                            <h3>Thêm mới tin tức</h3>
                            <hr />
                            @Html.ValidationSummary(true, "", new { @class = "text-danger" })

                            <div class="form-group">
                                <lable class="control-label col-md-2">Tiêu đề</lable>
                                <div class="col-md-10">
                                    @Html.EditorFor(model => model.NewTitle, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.NewTitle, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group">
                                <lable class="control-label col-md-2">Tiêu đề phụ</lable>
                                <div class="col-md-10">
                                    @Html.EditorFor(model => model.NewTitleSale, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.NewTitleSale, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group">
                                <lable class="control-label col-md-2">Thông tin phần đầu</lable>
                                <div class="col-md-10">
                                    @Html.TextAreaFor(model => model.NewContentHead, new { @class = "ckeditor" })
                                    @Html.ValidationMessageFor(model => model.NewContentHead, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group">
                                <lable class="control-label col-md-2">Thông tin phần thân</lable>
                                <div class="col-md-10">
                                    @Html.TextAreaFor(model => model.NewContentBody, new { @class = "ckeditor" })
                                    @Html.ValidationMessageFor(model => model.NewContentBody, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group">
                                <lable class="control-label col-md-2">Thông tin phần cuối</lable>
                                <div class="col-md-10">
                                    @Html.TextAreaFor(model => model.NewContentFooter, new { @class = "ckeditor" })
                                    @Html.ValidationMessageFor(model => model.NewContentFooter, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group">
                                <lable class="control-label col-md-2">Ảnh phần đầu</lable>
                                <div class="col-md-10">
                                    <img id="imgHead" alt="Image Head" style="height:200px;width:250px" />
                                    <input type='file' id="fUploadHead" name="fUploadHead" />
                                    @Html.ValidationMessageFor(model => model.ImageHead, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group">
                                <lable class="control-label col-md-2">Ảnh phần thân</lable>
                                <div class="col-md-10">
                                    <img id="imgBody" alt="Image Body" style="height:200px;width:250px" />
                                    <input type='file' id="fUploadBody" name="fUploadBody" />
                                    @Html.ValidationMessageFor(model => model.ImageBody, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group">
                                <lable class="control-label col-md-2">Ảnh phần cuối</lable>
                                <div class="col-md-10">
                                    <img id="imgFooter" alt="Image footer" style="height:200px;width:250px" />
                                    <input type='file' id="fUploadFooter" name="fUploadFooter" />
                                    @Html.ValidationMessageFor(model => model.ImageFooter, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group">
                                <lable class="control-label col-md-2">Từ khóa tìm kiếm</lable>
                                <div class="col-md-10">
                                    @Html.EditorFor(model => model.MetaKeyword, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.MetaKeyword, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group">
                                <lable class="control-label col-md-2">Mô tả</lable>
                                <div class="col-md-10">
                                    @Html.EditorFor(model => model.MetaDescription, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.MetaDescription, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>

                        <div style="margin-left:20px;">
                            @Html.ActionLink("Trở lại", "Index")
                        </div>
                    </div>
                }
            </div>
        </div>
    </div>
</section>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    <script type="text/javascript">
        function readURL(input, type) {
            if (input.files && input.files[0]) {
                var reader = new FileReader();

                reader.onload = function (e) {
                    $('#img' + type).attr('src', e.target.result);
                };

                reader.readAsDataURL(input.files[0]); // convert to base64 string
            }
        };

        $("#fUploadHead").change(function () {
            readURL(this, "Head");
        });
        $("#fUploadBody").change(function () {
            readURL(this, "Body");
        });
        $("#fUploadFooter").change(function () {
            readURL(this, "Footer");
        });
    </script>
}